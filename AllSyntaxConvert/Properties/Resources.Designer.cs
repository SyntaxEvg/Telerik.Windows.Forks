//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AllSyntaxConvert.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AllSyntaxConvert.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Addresses are not of the same type..
        /// </summary>
        internal static string AddressesNotOfSameType {
            get {
                return ResourceManager.GetString("AddressesNotOfSameType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Assembly name is required..
        /// </summary>
        internal static string AssemblyNameRequired {
            get {
                return ResourceManager.GetString("AssemblyNameRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The attribute &apos;{0}&apos; is not allowed.
        /// </summary>
        internal static string AttributeNotAllowed {
            get {
                return ResourceManager.GetString("AttributeNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The attribute &apos;{0}&apos; is required.
        /// </summary>
        internal static string AttributeRequired {
            get {
                return ResourceManager.GetString("AttributeRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Calling error handler.
        /// </summary>
        internal static string CallingErrorHandler {
            get {
                return ResourceManager.GetString("CallingErrorHandler", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The &apos;{0}&apos; element does not allow attributes.
        /// </summary>
        internal static string ElementNoAttributes {
            get {
                return ResourceManager.GetString("ElementNoAttributes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The &apos;{0}&apos; element does not allow nested elements.
        /// </summary>
        internal static string ElementNoElements {
            get {
                return ResourceManager.GetString("ElementNoElements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The element &apos;{0}&apos; is not allowed..
        /// </summary>
        internal static string ElementNotAllowed {
            get {
                return ResourceManager.GetString("ElementNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Full type name must include assembly name.
        /// </summary>
        internal static string FullTypeNameRequiresAssemblyName {
            get {
                return ResourceManager.GetString("FullTypeNameRequiresAssemblyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The input is not hex.
        /// </summary>
        internal static string InputIsNotHex {
            get {
                return ResourceManager.GetString("InputIsNotHex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Type is specified does not support the required interface.
        /// </summary>
        internal static string InvalidTypeSpecified {
            get {
                return ResourceManager.GetString("InvalidTypeSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Map &apos;{0}&apos; has already been defined.
        /// </summary>
        internal static string MapAlreadyDefined {
            get {
                return ResourceManager.GetString("MapAlreadyDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Mapped values are not allowed if a mapper type is specified.
        /// </summary>
        internal static string MappedValuesNotAllowed {
            get {
                return ResourceManager.GetString("MappedValuesNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на UrlRewriter.
        /// </summary>
        internal static string ProductName {
            get {
                return ResourceManager.GetString("ProductName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Redirecting.
        /// </summary>
        internal static string RedirectingXtoY {
            get {
                return ResourceManager.GetString("RedirectingXtoY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Restarting.
        /// </summary>
        internal static string RestartingBecauseOfRule {
            get {
                return ResourceManager.GetString("RestartingBecauseOfRule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Result.
        /// </summary>
        internal static string ResultNotFound {
            get {
                return ResourceManager.GetString("ResultNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rewriting.
        /// </summary>
        internal static string RewritingXtoY {
            get {
                return ResourceManager.GetString("RewritingXtoY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Stopping.
        /// </summary>
        internal static string StoppingBecauseOfRule {
            get {
                return ResourceManager.GetString("StoppingBecauseOfRule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на As configured, the rules caused too many restarts.  Please review.
        /// </summary>
        internal static string TooManyRestarts {
            get {
                return ResourceManager.GetString("TooManyRestarts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на TypeNameRequired.
        /// </summary>
        internal static string TypeNameRequired {
            get {
                return ResourceManager.GetString("TypeNameRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на the processing attribute is invalid.  It must.
        /// </summary>
        internal static string ValueOfProcessingAttribute {
            get {
                return ResourceManager.GetString("ValueOfProcessingAttribute", resourceCulture);
            }
        }
    }
}
